// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Курсач_опбд_версия_2;

#nullable disable

namespace Курсач_опбд_версия_2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Курсач_опбд_версия_2.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Fine")
                        .HasColumnType("real");

                    b.Property<DateTime>("GetTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GiveTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsHanded")
                        .HasColumnType("bit");

                    b.Property<int>("SkatesId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkatesId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Курсач_опбд_версия_2.Skates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Skates");
                });

            modelBuilder.Entity("Курсач_опбд_версия_2.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Курсач_опбд_версия_2.WriteoffSkates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SkatesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WriteOffDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SkatesId")
                        .IsUnique();

                    b.ToTable("WriteOffs");
                });

            modelBuilder.Entity("Курсач_опбд_версия_2.Order", b =>
                {
                    b.HasOne("Курсач_опбд_версия_2.Skates", "Skates")
                        .WithOne("Order")
                        .HasForeignKey("Курсач_опбд_версия_2.Order", "SkatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Курсач_опбд_версия_2.User", "User")
                        .WithOne("Order")
                        .HasForeignKey("Курсач_опбд_версия_2.Order", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skates");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Курсач_опбд_версия_2.WriteoffSkates", b =>
                {
                    b.HasOne("Курсач_опбд_версия_2.Skates", "Skates")
                        .WithOne("WriteoffSkates")
                        .HasForeignKey("Курсач_опбд_версия_2.WriteoffSkates", "SkatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skates");
                });

            modelBuilder.Entity("Курсач_опбд_версия_2.Skates", b =>
                {
                    b.Navigation("Order")
                        .IsRequired();

                    b.Navigation("WriteoffSkates")
                        .IsRequired();
                });

            modelBuilder.Entity("Курсач_опбд_версия_2.User", b =>
                {
                    b.Navigation("Order")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
